<?xml version="1.0" encoding="ASCII"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
    <display-name>tonguetied-web</display-name>
    <description>Resource management application</description>
   	<jsp-config>
   		<taglib>
    		<taglib-uri>http://java.sun.com/jstl/fmt</taglib-uri>
    		<taglib-location>/WEB-INF/tld/fmt.tld</taglib-location>
	  	</taglib>
	  	<taglib>
	    	<taglib-uri>http://java.sun.com/jstl/core</taglib-uri>
	    	<taglib-location>/WEB-INF/tld/c.tld</taglib-location>
  		</taglib>
  		<taglib>
	    	<taglib-uri>http://java.sun.com/jstl/sql</taglib-uri>
	    	<taglib-location>/WEB-INF/tld/sql.tld</taglib-location>
  		</taglib>
  		<taglib>
		    <taglib-uri>http://java.sun.com/jstl/x</taglib-uri>
		    <taglib-location>/WEB-INF/tld/x.tld</taglib-location>
	  	</taglib>
   	</jsp-config>
   	
    
    <!--
      - Location of the XML file that defines the root application context
      - Applied by ContextLoaderListener.
      -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:application-context.xml,WEB-INF/web-servlet.xml,WEB-INF/security-context.xml
        </param-value>
    </context-param>

    <!--
      - Location of the Log4J config file, for initialization and refresh checks.
      - Applied by Log4jConfigListener.
      -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/WEB-INF/log4j.properties</param-value>
    </context-param>

    <filter> 
        <filter-name>requestContextFilter</filter-name> 
        <filter-class>org.springframework.web.filter.RequestContextFilter</filter-class>
    </filter>
    
    <filter>
      <filter-name>springSecurityFilterChain</filter-name>
      <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
  
    <filter>
        <filter-name>sitemesh</filter-name>
        <filter-class>com.opensymphony.module.sitemesh.filter.PageFilter</filter-class>
            <init-param>
                <param-name>debug.pagewriter</param-name>
                <param-value>true</param-value>
            </init-param>
    </filter>
    
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    
    <filter-mapping>
      <filter-name>springSecurityFilterChain</filter-name>
      <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>requestContextFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>sitemesh</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>ERROR</dispatcher>
    </filter-mapping>

    <!--
      - Loads the root application context of this web app at startup.
      - The application context is then available via 
      - WebApplicationContextUtils.getWebApplicationContext(servletContext).
    -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener-->
 
    <!--
      - Configures Log4J for this web app.
      - As this context specifies a context-param "log4jConfigLocation", its file path
      - is used to load the Log4J configuration, including periodic refresh checks.
      -
      - Would fall back to default Log4J initialization (non-refreshing) if no special
      - context-params are given.
      -
      - Exports a "web app root key", i.e. a system property that specifies the root
      - directory of this web app, for usage in log file paths.
      - This web app specifies "countries.root" (see log4j.properties file).
      -->
    <!-- Leave the listener commented-out if using JBoss -->
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>

    <!--
      - The HttpSessionEventPublisher will publish HttpSessionCreatedEvent and 
      - HttpSessionDestroyedEvent to the WebApplicationContext
     -->  
    <listener>
        <listener-class>org.springframework.security.ui.session.HttpSessionEventPublisher</listener-class>
    </listener>
     
    <listener>
        <listener-class>org.tonguetied.web.servlet.UserSessionInitializer</listener-class>
    </listener>
    
    <listener>
        <listener-class>org.tonguetied.web.servlet.ServletContextInitializer</listener-class>
    </listener>
    
    <servlet>
        <servlet-name>web</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    
    <servlet-mapping>
        <servlet-name>web</servlet-name>
        <url-pattern>*.htm</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>
        <servlet-name>web</servlet-name>
        <url-pattern>*.dir</url-pattern>
    </servlet-mapping>
    
    <session-config>
        <session-timeout>20</session-timeout>
    </session-config>
    
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
</web-app>